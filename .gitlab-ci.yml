# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
  # - test
  - build
  - deploy

variables:
  BASE_IMAGE_NAME: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  IAMGE_NAME: $BASE_IMAGE_NAME:$CI_PIPELINE_ID

# sast:
#     stage: test
# include:
#     - template: Security/SAST.gitlab-ci.yml

.build:
  stage: build
  variables:
    DOCKERFILE_PATH: ./
    DOCKER_CONTEXT: ./
    PROJECT_ENV: development
  tags:
    - docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  after_script:
    - docker logout $CI_REGISTRY
  script:
    - docker build ----build-arg -t $IAMGE_NAME $DOCKER_CONTEXT -f $DOCKERFILE_PATH/Dockerfile
    - docker push $IAMGE_NAME

.deploy:
  stage: deploy
  image: dtzar/helm-kubectl:3.12.3
  needs:
    - build
  tags:
    - docker
  variables:
    PROJECT: $CI_PROJECT_NAME
    NAMESAPCE: erp-dev
    KUBECONFIG_PATH: ""
    VALUES_FILE: develop
  script:
    - |
      helm --kubeconfig $KUBECONFIG_PATH upgrade -i --create-namespace -n $NAMESAPCE $PROJECT .helm -f .helm/values-$VALUES_FILE.yaml --set image.tag=$CI_PIPELINE_ID --set image.repository=$BASE_IMAGE_NAME

build:development:
  stage: build
  extends: .build
  only:
    - dev
  variables:
    PROJECT_ENV: development

build:staging:
  stage: build
  extends: .build
  only:
    - test
  variables:
    PROJECT_ENV: staging

build:prod:
  stage: build
  extends: .build
  only:
    - main
  variables:
    PROJECT_ENV: prod

deploy:develop:
  extends: .deploy
  only:
    - dev
  variables:
    NAMESAPCE: erp-dev
    KUBECONFIG_PATH: $DEV_KUBECONFIG
    VALUES_FILE: develop

deploy:test:
  extends: .deploy
  only:
    - test
  variables:
    NAMESAPCE: erp-test
    KUBECONFIG_PATH: $DEV_KUBECONFIG
    VALUES_FILE: test

deploy:production:
  extends: .deploy
  when: manual
  only:
    - main
  variables:
    NAMESAPCE: erp-prod
    KUBECONFIG_PATH: $PROD_KUBECONFIG
    VALUES_FILE: production
